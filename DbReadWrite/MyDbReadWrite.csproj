<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <CodeAnalysisRuleSet>ManagedMinimumRules.ruleset</CodeAnalysisRuleSet>
    <AutoGenerateBindingRedirects>False</AutoGenerateBindingRedirects>
    <TargetFrameworks>net472</TargetFrameworks>
  </PropertyGroup>
  <ItemGroup Condition="'$(TargetFramework)' != 'net472'">
    <PackageReference Include="System.Drawing.Common" Version="6.0.0" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)'!='net472'">
    <PackageReference Include="System.Data.SqlClient" Version="4.8.5" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="SimioAPI">
      <HintPath>..\..\..\..\..\..\Program Files\Simio LLC\Simio\SimioAPI.dll</HintPath>
    </Reference>
    <Reference Include="SimioAPI.Extensions">
      <HintPath>..\..\..\..\..\..\Program Files\Simio LLC\Simio\SimioAPI.Extensions.dll</HintPath>
    </Reference>
  </ItemGroup>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="PowerShell -NoProfile -ExecutionPolicy Bypass -Command &quot;&amp; { $targetFolder = [System.IO.Path]::Combine([Environment]::GetFolderPath([Environment+SpecialFolder]::MyDocuments), 'SimioUserExtensions'); Write-Host 'Target Folder:' $targetFolder; if (Test-Path -Path $targetFolder) { Write-Host 'Target folder already exists.' } else { Write-Host 'Target folder does not exist. Creating...'; New-Item -ItemType Directory -Force -Path $targetFolder; Write-Host 'Target folder created.' }; foreach ($file in Get-ChildItem \&quot;$(TargetDir)*\&quot; -File) { Copy-Item -Path $file.FullName -Destination $targetFolder; Write-Host 'Copied ' $file.Name ' to ' $targetFolder } }&quot;&#xD;&#xA;&#xD;&#xA;" />
  </Target>
</Project>